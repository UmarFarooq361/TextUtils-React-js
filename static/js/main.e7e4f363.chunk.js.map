{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","title","onClick","toggleMode","htmlFor","Form","countWords","s","replace","split","length","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","placeholder","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","join","Alert","alert","role","word","low","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e7e4f363.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link \" href=\"/About\">About</a>\r\n                </li> */}\r\n                \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                <input className=\"form-check-input\"onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Switch Mode</label>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\nNavbar.propTypes={title : PropTypes.string};\r\n\r\nNavbar.defaultProps={title : 'New title '}","\r\n\r\nimport React , {useState} from 'react'\r\n\r\nexport default function Form(props) {\r\n    \r\n    const ChangeUpper = ()=>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\" ,\"success\")\r\n    }\r\n    const ChangeLower = ()=>{\r\n        let newText= text.toLowerCase();\r\n        props.showAlert(\"Converted to LowerCase\" ,\"success\")\r\n        setText(newText);\r\n    }\r\n    const clear = ()=>{\r\n        props.showAlert(\"Text is cleared\" ,\"danger\")\r\n        // let newText= text.toLowerCase();\r\n        setText(\"\");\r\n    }\r\n    const copyText = ()=>{\r\n        let newText= document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value)\r\n        props.showAlert(\"Text has been copied to clipboard!\" ,\"info\")\r\n    }\r\n    const removeExtraSpaces = ()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\" Extra spaces has been removed\" ,\"success\")\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const countWords =(s)=>{\r\n        s = s.replace(/\\n/g,' '); // newlines to space\r\n        s = s.replace(/(^\\s*)|(\\s*$)/gi,''); // remove spaces from start + end\r\n        s = s.replace(/[ ]{2,}/gi,' '); // 2 or more spaces to 1\r\n        return s.split(' ').length; \r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className='container my-3'style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control \" id=\"myBox\" value={text}placeholder=\"Enter your text \" \r\n                onChange={handleOnChange} rows=\"6\" style={{backgroundColor:props.mode===\"dark\"?\"#151A36\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}}></textarea>\r\n                <div>\r\n                <button className='btn btn-primary mt-4' onClick={ChangeUpper}>Convert to Uppercase</button>\r\n                <button className='btn btn-primary mt-4 mx-3' onClick={ChangeLower}>Convert to lowercase</button>\r\n                <button className='btn btn-primary mt-4 mx-3' onClick={copyText}>Copy Text</button>\r\n                <button className='btn btn-primary mt-4 mx-3' onClick={removeExtraSpaces}>Remove Extra Spaces</button>\r\n                <button className='btn btn-primary mt-4 mx-3' onClick={clear}>Clear All Text</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\"style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h3>Your Text Summary </h3>\r\n            <h5>{`${text.length=== 0 ? 0 : countWords(text)}`} Words and {text.length} Characters</h5>\r\n            {/* <h5>{text.split(\" \").length-1} Words and {text.length} Characters</h5> */}\r\n            <h5>{(0.02*(text.length=== 0 ? 0 : countWords(text)))} Minutes required to read this .</h5>\r\n            <h3>Text Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const low = word.toLowerCase();\r\n        return low.charAt(0).toUpperCase()+low.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n        )\r\n}\r\n","import Navbar from './components/Navbar'\nimport Form from './components/Form'\nimport Alert from './components/Alert'\nimport React from 'react'\n// import About from './components/About'\nimport { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type)=>\n  {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n                  },\n      1500);\n  }\n  const toggleMode = ()=>{\n        if(mode===\"light\"){\n          setMode(\"dark\")\n          document.body.style.backgroundColor=\"#14314e\"\n          showAlert(\"Dark mode has been enabled\",\"success\")\n        }\n        else{\n          setMode(\"light\")\n          document.body.style.backgroundColor=\"white\"\n          showAlert(\"Light mode has been enabled\",\"success\")\n\n        }\n  }\n\n  return (\n    <>\n    {/* <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <Routes>\n        <Route path=\"/about\" element={<About/>} />\n        <Route path=\"/\" element={<Form heading=\"Text you want to convert \"showAlert={showAlert} mode={mode} />} />\n    </Routes>\n    </Router>\n    */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n\n    <Form heading=\"Text you want to convert \"showAlert={showAlert} mode={mode} />\n        </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}